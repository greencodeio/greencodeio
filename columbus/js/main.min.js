"use strict";const slider=document.querySelector(".c-slider"),sliderTrack=slider.querySelector(".c-slider__track"),sliderItems=slider.querySelectorAll(".c-slider__item"),nextBtn=slider.querySelector(".c-slider__next-btn"),prevBtn=slider.querySelector(".c-slider__prev-btn");let slidesArr=[],currentItem=0,firstClick=0,clickStatus=0,slideWidth=sliderItems[0].clientWidth,transformStep=-slideWidth,transformCounter=100*sliderItems.length,slideTransform=0;sliderTrack.style.transform=`translateX(${transformStep}px)`,window.addEventListener("resize",(function(){trackWidth=sliderTrack.clientWidth,slideWidth=sliderItems[0].clientWidth})),sliderItems.forEach((e,t)=>{slidesArr.push({slide:e,position:t,transform:0})}),nextBtn.addEventListener("click",(function(){sliderTrack.style.transition="all ease 0.3s",transformStep-=slideWidth,sliderTrack.style.transform=`translateX(${transformStep}px)`,0===clickStatus&&(currentItem+1>=slidesArr.length?currentItem=0:currentItem++,clickStatus=1),0===firstClick&&(currentItem=0,firstClick=1),slidesArr[currentItem].transform+=transformCounter,sliderItems[currentItem].style.transform=`translateX(${slidesArr[currentItem].transform}%)`,currentItem+1>slidesArr.length-1?currentItem=0:currentItem++})),prevBtn.addEventListener("click",(function(){sliderTrack.style.transition="all ease 0.3s",transformStep+=slideWidth,sliderTrack.style.transform=`translateX(${transformStep}px)`,1===clickStatus&&(currentItem-1<0?currentItem=slidesArr.length-1:currentItem--,clickStatus=0),0===firstClick&&(currentItem=slidesArr.length-1,firstClick=1),slidesArr[currentItem].transform-=transformCounter,sliderItems[currentItem].style.transform=`translateX(${slidesArr[currentItem].transform}%)`,currentItem-1<0?currentItem=slidesArr.length-1:currentItem--}));let toggleBtn=document.querySelector(".js-toggleBtn"),nav=document.querySelector(".c-header__nav"),body=document.querySelector("body");toggleBtn.addEventListener("click",(function(){toggleBtn.classList.toggle("is-active"),nav.classList.toggle("is-opened"),body.classList.toggle("is-locked")}));let categoryBtn=document.querySelector(".c-slots__category-btn"),categoryList=document.querySelector(".c-slots__category-list");categoryBtn.addEventListener("click",(function(){categoryBtn.classList.toggle("is-active"),categoryList.classList.toggle("is-active")}));let dropToggle=document.querySelector(".c-nav__drop-toggle"),dropNav=document.querySelector(".c-nav__dropdown-list");dropToggle.addEventListener("click",(function(){dropNav.classList.toggle("is-active")}));const getJackpot=function(e,t,r){let n=document.querySelector(e).querySelector(t),i=n.querySelectorAll(r),s=[],l=[];i.forEach(e=>{s.unshift(e.innerText)});let c=parseInt(s.join(""));for(c+=Math.ceil(40*Math.random(0,1)),l=String(c).split("").reverse();n.firstChild;)n.removeChild(n.firstChild);l.forEach(e=>{let t=document.createElement("div");t.classList.add("c-jackpot__digit"),t.innerText=e,n.appendChild(t)})};function getTimeRemaining(e){let t=Date.parse(e)-Date.parse(new Date),r=Math.floor(t/1e3%60),n=Math.floor(t/1e3/60%60),i=Math.floor(t/36e5%24);return{total:t,days:Math.floor(t/864e5),hours:i,minutes:n,seconds:r}}function initializeClock(e){let t=document.querySelectorAll(".c-jackpot__timer-digit.minutes"),r=document.querySelectorAll(".c-jackpot__timer-digit.seconds");let n=setInterval((function(){let i=getTimeRemaining(e),s=[],l=[];if(i.total<=0){return clearInterval(n),document.querySelectorAll(".c-jackpot__timer-digit").forEach(e=>{e.innerText=0}),!0}function c(e,t){e.forEach((r,n)=>{r.innerText=t[n],1===t.length&&(e[0].innerText=0,e[n].innerText=t[0]),"undefined"===r.innerText&&(r.innerText=0)})}s=String(i.minutes).split(""),l=String(i.seconds).split(""),c(t,s),c(r,l)}),1e3)}setInterval(getJackpot,100,".hourly-drop",".c-jackpot__counter",".c-jackpot__digit"),setInterval(getJackpot,100,".daily-drop",".c-jackpot__counter",".c-jackpot__digit");let deadline=new Date(Date.parse(new Date)+12e5);initializeClock(deadline);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
