/*! lazysizes - v5.2.0-beta1 */
!function(e,t){var n=function(e,t){"use strict";var n,a;if(function(){var t,n={lazyClass:"lazyload",loadedClass:"lazyloaded",loadingClass:"lazyloading",preloadClass:"lazypreload",errorClass:"lazyerror",autosizesClass:"lazyautosizes",srcAttr:"data-src",srcsetAttr:"data-srcset",sizesAttr:"data-sizes",minSize:40,customMedia:{},init:!0,expFactor:1.5,hFac:.8,loadMode:2,loadHidden:!0,ricTimeout:0,throttleDelay:125};for(t in a=e.lazySizesConfig||e.lazysizesConfig||{},n)t in a||(a[t]=n[t])}(),!t||!t.getElementsByClassName)return{init:function(){},cfg:a,noSupport:!0};var i=t.documentElement,r=e.Date,s=e.HTMLPictureElement,o="addEventListener",l="getAttribute",c=e[o],u=e.setTimeout,d=e.requestAnimationFrame||u,f=e.requestIdleCallback,m=/^picture$/i,y=["load","error","lazyincluded","_lazyloaded"],z={},h=Array.prototype.forEach,v=function(e,t){return z[t]||(z[t]=new RegExp("(\\s|^)"+t+"(\\s|$)")),z[t].test(e[l]("class")||"")&&z[t]},g=function(e,t){v(e,t)||e.setAttribute("class",(e[l]("class")||"").trim()+" "+t)},p=function(e,t){var n;(n=v(e,t))&&e.setAttribute("class",(e[l]("class")||"").replace(n," "))},C=function(e,t,n){var a=n?o:"removeEventListener";n&&C(e,t),y.forEach((function(n){e[a](n,t)}))},b=function(e,a,i,r,s){var o=t.createEvent("Event");return i||(i={}),i.instance=n,o.initEvent(a,!r,!s),o.detail=i,e.dispatchEvent(o),o},A=function(t,n){var i;!s&&(i=e.picturefill||a.pf)?(n&&n.src&&!t[l]("srcset")&&t.setAttribute("srcset",n.src),i({reevaluate:!0,elements:[t]})):n&&n.src&&(t.src=n.src)},E=function(e,t){return(getComputedStyle(e,null)||{})[t]},_=function(e,t,n){for(n=n||e.offsetWidth;n<a.minSize&&t&&!e._lazysizesWidth;)n=t.offsetWidth,t=t.parentNode;return n},w=function(){var e,n,a=[],i=[],r=a,s=function(){var t=r;for(r=a.length?i:a,e=!0,n=!1;t.length;)t.shift()();e=!1},o=function(a,i){e&&!i?a.apply(this,arguments):(r.push(a),n||(n=!0,(t.hidden?u:d)(s)))};return o._lsFlush=s,o}(),N=function(e,t){return t?function(){w(e)}:function(){var t=this,n=arguments;w((function(){e.apply(t,n)}))}},M=function(e){var t,n=0,i=a.throttleDelay,s=a.ricTimeout,o=function(){t=!1,n=r.now(),e()},l=f&&s>49?function(){f(o,{timeout:s}),s!==a.ricTimeout&&(s=a.ricTimeout)}:N((function(){u(o)}),!0);return function(e){var a;(e=!0===e)&&(s=33),t||(t=!0,(a=i-(r.now()-n))<0&&(a=0),e||a<9?l():u(l,a))}},x=function(e){var t,n,a=function(){t=null,e()},i=function(){var e=r.now()-n;e<99?u(i,99-e):(f||a)(a)};return function(){n=r.now(),t||(t=u(i,99))}},L=function(){var s,f,y,z,_,L,S,B,T,F,R,k,D=/^img$/i,H=/^iframe$/i,O="onscroll"in e&&!/(gle|ing)bot/.test(navigator.userAgent),P=0,$=0,I=-1,q=function(e){$--,(!e||$<0||!e.target)&&($=0)},U=function(e){return null==k&&(k="hidden"==E(t.body,"visibility")),k||!("hidden"==E(e.parentNode,"visibility")&&"hidden"==E(e,"visibility"))},j=function(e,n){var a,r=e,s=U(e);for(B-=n,R+=n,T-=n,F+=n;s&&(r=r.offsetParent)&&r!=t.body&&r!=i;)(s=(E(r,"opacity")||1)>0)&&"visible"!=E(r,"overflow")&&(a=r.getBoundingClientRect(),s=F>a.left&&T<a.right&&R>a.top-1&&B<a.bottom+1);return s},G=function(){var e,r,o,c,u,d,m,y,h,v,g,p,C=n.elements;if((z=a.loadMode)&&$<8&&(e=C.length)){for(r=0,I++;r<e;r++)if(C[r]&&!C[r]._lazyRace)if(!O||n.prematureUnveil&&n.prematureUnveil(C[r]))Z(C[r]);else if((y=C[r][l]("data-expand"))&&(d=1*y)||(d=P),v||(v=!a.expand||a.expand<1?i.clientHeight>500&&i.clientWidth>500?500:370:a.expand,n._defEx=v,g=v*a.expFactor,p=a.hFac,k=null,P<g&&$<1&&I>2&&z>2&&!t.hidden?(P=g,I=0):P=z>1&&I>1&&$<6?v:0),h!==d&&(L=innerWidth+d*p,S=innerHeight+d,m=-1*d,h=d),o=C[r].getBoundingClientRect(),(R=o.bottom)>=m&&(B=o.top)<=S&&(F=o.right)>=m*p&&(T=o.left)<=L&&(R||F||T||B)&&(a.loadHidden||U(C[r]))&&(f&&$<3&&!y&&(z<3||I<4)||j(C[r],d))){if(Z(C[r]),u=!0,$>9)break}else!u&&f&&!c&&$<4&&I<4&&z>2&&(s[0]||a.preloadAfterLoad)&&(s[0]||!y&&(R||F||T||B||"auto"!=C[r][l](a.sizesAttr)))&&(c=s[0]||C[r]);c&&!u&&Z(c)}},J=M(G),K=function(e){var t=e.target;t._lazyCache?delete t._lazyCache:(q(e),g(t,a.loadedClass),p(t,a.loadingClass),C(t,V),b(t,"lazyloaded"))},Q=N(K),V=function(e){Q({target:e.target})},X=function(e){var t,n=e[l](a.srcsetAttr);(t=a.customMedia[e[l]("data-media")||e[l]("media")])&&e.setAttribute("media",t),n&&e.setAttribute("srcset",n)},Y=N((function(e,t,n,i,r){var s,o,c,d,f,z;(f=b(e,"lazybeforeunveil",t)).defaultPrevented||(i&&(n?g(e,a.autosizesClass):e.setAttribute("sizes",i)),o=e[l](a.srcsetAttr),s=e[l](a.srcAttr),r&&(d=(c=e.parentNode)&&m.test(c.nodeName||"")),z=t.firesLoad||"src"in e&&(o||s||d),f={target:e},g(e,a.loadingClass),z&&(clearTimeout(y),y=u(q,2500),C(e,V,!0)),d&&h.call(c.getElementsByTagName("source"),X),o?e.setAttribute("srcset",o):s&&!d&&(H.test(e.nodeName)?function(e,t){try{e.contentWindow.location.replace(t)}catch(n){e.src=t}}(e,s):e.src=s),r&&(o||d)&&A(e,{src:s})),e._lazyRace&&delete e._lazyRace,p(e,a.lazyClass),w((function(){var t=e.complete&&e.naturalWidth>1;z&&!t||(t&&g(e,"ls-is-cached"),K(f),e._lazyCache=!0,u((function(){"_lazyCache"in e&&delete e._lazyCache}),9)),"lazy"==e.loading&&$--}),!0)})),Z=function(e){if(!e._lazyRace){var t,n=D.test(e.nodeName),i=n&&(e[l](a.sizesAttr)||e[l]("sizes")),r="auto"==i;(!r&&f||!n||!e[l]("src")&&!e.srcset||e.complete||v(e,a.errorClass)||!v(e,a.lazyClass))&&(t=b(e,"lazyunveilread").detail,r&&W.updateElem(e,!0,e.offsetWidth),e._lazyRace=!0,$++,Y(e,t,r,i,n))}},ee=x((function(){a.loadMode=3,J()})),te=function(){3==a.loadMode&&(a.loadMode=2),ee()},ne=function(){if(!f){if(r.now()-_<999)return void u(ne,999);f=!0,a.loadMode=3,J(),c("scroll",te,!0)}};return{_:function(){_=r.now(),n.elements=t.getElementsByClassName(a.lazyClass),s=t.getElementsByClassName(a.lazyClass+" "+a.preloadClass),c("scroll",J,!0),c("resize",J,!0),c("pageshow",(function(e){if(e.persisted){var n=t.querySelectorAll("."+a.loadingClass);n.length&&n.forEach&&d((function(){n.forEach((function(e){e.complete&&Z(e)}))}))}})),e.MutationObserver?new MutationObserver(J).observe(i,{childList:!0,subtree:!0,attributes:!0}):(i[o]("DOMNodeInserted",J,!0),i[o]("DOMAttrModified",J,!0),setInterval(J,999)),c("hashchange",J,!0),["focus","mouseover","click","load","transitionend","animationend"].forEach((function(e){t[o](e,J,!0)})),/d$|^c/.test(t.readyState)?ne():(c("load",ne),t[o]("DOMContentLoaded",J),u(ne,2e4)),n.elements.length?(G(),w._lsFlush()):J()},checkElems:J,unveil:Z,_aLSL:te}}(),W=function(){var e,n=N((function(e,t,n,a){var i,r,s;if(e._lazysizesWidth=a,a+="px",e.setAttribute("sizes",a),m.test(t.nodeName||""))for(r=0,s=(i=t.getElementsByTagName("source")).length;r<s;r++)i[r].setAttribute("sizes",a);n.detail.dataAttr||A(e,n.detail)})),i=function(e,t,a){var i,r=e.parentNode;r&&(a=_(e,r,a),(i=b(e,"lazybeforesizes",{width:a,dataAttr:!!t})).defaultPrevented||(a=i.detail.width)&&a!==e._lazysizesWidth&&n(e,r,i,a))},r=x((function(){var t,n=e.length;if(n)for(t=0;t<n;t++)i(e[t])}));return{_:function(){e=t.getElementsByClassName(a.autosizesClass),c("resize",r)},checkElems:r,updateElem:i}}(),S=function(){!S.i&&t.getElementsByClassName&&(S.i=!0,W._(),L._())};return u((function(){a.init&&S()})),n={cfg:a,autoSizer:W,loader:L,init:S,uP:A,aC:g,rC:p,hC:v,fire:b,gW:_,rAF:w}}(e,e.document);e.lazySizes=n,"object"==typeof module&&module.exports&&(module.exports=n)}("undefined"!=typeof window?window:{}),document.addEventListener("lazybeforeunveil",(function(e){var t=e.target.getAttribute("data-bg");t&&("css"==t?e.target.classList.add("is-load"):e.target.style.backgroundImage="url("+t+")")}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
