"use strict";const sliderWrapper=document.querySelector(".c-slider__track"),slides=document.querySelectorAll(".c-slider__item"),prevBtn=document.querySelector(".c-slider__prev"),nextBtn=document.querySelector(".c-slider__next"),wrapperWidth=100*slides.length,slideWidth=slides[0].clientWidth;let currentItem=0,transformWrapper=0,slidesArr=[],clickControl=0,firstClick=0,checkNextPosition=0,zIndexPosition=0;const transformTrack=function(){transformWrapper=window.matchMedia("(min-width: 768px)").matches?80*-slideWidth/100*2.24:-slideWidth,sliderWrapper.style.transform=`translateX(${transformWrapper}px)`};slides.forEach((e,t)=>{slidesArr.push({slide:e,position:t,transform:0})}),transformWrapper=window.matchMedia("(min-width: 768px)").matches?80*-slideWidth/100*2.24:-slideWidth,sliderWrapper.style.transform=`translateX(${transformWrapper}px)`,slidesArr[2].slide.classList.add("is-active"),window.matchMedia("(min-width:768px)").matches?slidesArr[2].slide.classList.add("is-active"):slidesArr[1].slide.classList.add("is-active");const zIndexCheckerNext=function(){let e=slidesArr.length;slidesArr.forEach(t=>{t.slide.style.zIndex=e,e--}),zIndexPosition+1>=slidesArr.length?(zIndexPosition=0,e=slidesArr.length+1,slidesArr.forEach(t=>{t.slide.style.zIndex=e,e--})):zIndexPosition+2>=slidesArr.length?(slidesArr.forEach(e=>{e.slide.style.zIndex="auto"}),zIndexPosition++):zIndexPosition++},zIndexCheckerPrev=function(){let e=slidesArr.length;slidesArr.forEach(t=>{t.slide.style.zIndex=e,e--}),zIndexPosition-1<0?(zIndexPosition=slidesArr.length-1,e=slidesArr.length+1,slidesArr.forEach(t=>{t.slide.style.zIndex="auto",e--})):zIndexPosition-1==0?(slidesArr.forEach(e=>{}),zIndexPosition--):zIndexPosition--};if(zIndexCheckerNext(),prevBtn.addEventListener("click",(function(){sliderWrapper.style.transition="all ease 1.2s",transformWrapper-=-slideWidth,sliderWrapper.style.transform=`translateX(${transformWrapper}px)`,slidesArr.forEach(e=>{e.slide.classList.remove("is-active")}),0===firstClick&&(currentItem=slides.length,firstClick=1),0===clickControl&&(currentItem-1<0?currentItem=slidesArr.length-1:currentItem--,clickControl=1),checkNextPosition=currentItem,window.matchMedia("(min-width:768px)").matches?checkNextPosition+1>=slidesArr.length?slidesArr[1].slide.classList.add("is-active"):checkNextPosition+2>=slidesArr.length?slidesArr[0].slide.classList.add("is-active"):slidesArr[checkNextPosition+2].slide.classList.add("is-active"):(checkNextPosition+1>=slidesArr.length?checkNextPosition=0:checkNextPosition++,slidesArr[checkNextPosition].slide.classList.add("is-active")),zIndexCheckerPrev(),slidesArr[currentItem].transform-=wrapperWidth,slidesArr[currentItem].slide.style.transform=`translateX(${slidesArr[currentItem].transform}%)`,currentItem-1<0?currentItem=slidesArr.length-1:currentItem--})),nextBtn.addEventListener("click",(function(){sliderWrapper.style.transition="all ease 1.2s",transformWrapper+=-slideWidth,sliderWrapper.style.transform=`translateX(${transformWrapper}px)`,slidesArr.forEach(e=>{e.slide.classList.remove("is-active")}),0===firstClick&&(currentItem=0,firstClick=1),1===clickControl&&(currentItem+1>=slidesArr.length?currentItem=0:currentItem++,clickControl=0),zIndexCheckerNext(),slidesArr[currentItem].transform+=wrapperWidth,slidesArr[currentItem].slide.style.transform=`translateX(${slidesArr[currentItem].transform}%)`,currentItem+1>=slidesArr.length?currentItem=0:currentItem++,checkNextPosition=currentItem,window.matchMedia("(min-width:768px)").matches?checkNextPosition+1>=slidesArr.length?slidesArr[1].slide.classList.add("is-active"):checkNextPosition+2>=slidesArr.length?slidesArr[0].slide.classList.add("is-active"):slidesArr[checkNextPosition+2].slide.classList.add("is-active"):(checkNextPosition+1>=slidesArr.length?checkNextPosition=0:checkNextPosition++,slidesArr[checkNextPosition].slide.classList.add("is-active"))})),matchMedia("(min-width: 1024px").matches){const e=document.querySelector(".c-shares__slider-wrapper"),t=document.querySelectorAll(".c-shares__slider-item"),s=(slides.length,slides[0].clientWidth,window.getComputedStyle(t[0]));let r=0,i=-(parseInt(s.width)+parseInt(s.marginRight)),n=[];e.style.transform=`translateX(${i}px)`,t.forEach((e,t)=>{n.push({slide:e,position:t,transform:0})});const l=(parseInt(s.width)+parseInt(s.marginRight))*n.length;console.log(l);const o=function(){i+=-(parseInt(s.width)+parseInt(s.marginRight)),e.style.transform=`translateX(${i}px)`,n[r].transform+=l,console.log(n[r].transform),n[r].slide.style.transform=`translateX(${n[r].transform}px)`,r+1>=n.length?r=0:r++,e.style.transition="all ease-out 1s"};let a=setInterval(o,2500);e.addEventListener("mouseover",()=>{clearInterval(a)}),e.addEventListener("mouseout",()=>{a=setInterval(o,2500)})}const openBtn=document.querySelector(".c-header__toggleBtn"),closeBtn=document.querySelector(".c-nav__closeBtn"),overlay=document.querySelector(".is-overlay"),nav=document.querySelector(".c-nav");let navTracker=0;window.addEventListener("scroll",(function(){nav.style.top=`${window.scrollY}px`,overlay.style.top=`${window.scrollY}px`})),openBtn.addEventListener("click",(function(){nav.style.transform="translateX(0)",nav.style.transition="ease all 0.3s",document.body.style.overflow="hidden",overlay.classList.add("is-active")})),closeBtn.addEventListener("click",(function(){nav.style.transform="translateX(-100%)",nav.style.transition="ease all 0.3s",document.body.style.overflow="scroll",overlay.classList.remove("is-active")})),overlay.addEventListener("click",(function(){nav.style.transform="translateX(-100%)",nav.style.transition="ease all 0.3s",document.body.style.overflow="scroll",overlay.classList.remove("is-active")}));let dropLinks=document.querySelectorAll(".c-nav__link-drop");dropLinks.forEach(e=>{e.addEventListener("click",(function(t){t.preventDefault(),e.nextElementSibling.classList.toggle("is-open"),console.log(e.nextElementSibling)}))});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
